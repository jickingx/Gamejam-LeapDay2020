[gd_scene load_steps=8 format=2]

[ext_resource path="res://Characters/PlayerPlatformer/PlayerPlatformerAnim.tres" type="SpriteFrames" id=1]
[ext_resource path="res://Characters/ShakeCamera.gd" type="Script" id=2]
[ext_resource path="res://Sounds/FX/jump.wav" type="AudioStream" id=3]
[ext_resource path="res://Sounds/FX/hurt.wav" type="AudioStream" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D
signal npc_collided
signal dead

# This demo shows how to build a kinematic controller.

# Member variables
const GRAVITY = 400.0 # pixels/second/second

# Angle in degrees towards either side that the player can consider \"floor\"
const FLOOR_ANGLE_TOLERANCE = 40
const WALK_FORCE = 120
const WALK_MIN_SPEED = 10
const WALK_MAX_SPEED = 120
const STOP_FORCE = 1300
const JUMP_SPEED = 170
const JUMP_MAX_AIRBORNE_TIME = 0.2

const SLIDE_STOP_VELOCITY = 1.0 # one pixel/second
const SLIDE_STOP_MIN_TRAVEL = 1.0 # one pixel

#cache the sprite here for fast access (we will set scale to flip it often)
onready var sprite = $AnimatedSprite
onready var jump_sound = $JumpSound
onready var hurt_sound = $HurtSound

var velocity = Vector2()
var on_air_time = 100
var jumping = false
var prev_jump_pressed = false

var is_disabled = false
var is_dead = false
var is_dead_jumped = false


func _physics_process(delta):
	# Create forces
	var force = Vector2(0, GRAVITY)

	var walk_left = Input.is_action_pressed(\"ui_left\")
	var walk_right = Input.is_action_pressed(\"ui_right\")
	var jump = Input.is_action_pressed(\"ui_up\")

	var stop = true

	#HELLO SPAGHETTI MY OLD FRIEND
	if not is_dead and not is_disabled:
		if walk_left:
			if velocity.x <= WALK_MIN_SPEED and velocity.x > -WALK_MAX_SPEED:
				force.x -= WALK_FORCE
				stop = false
		elif walk_right:
			if velocity.x >= -WALK_MIN_SPEED and velocity.x < WALK_MAX_SPEED:
				force.x += WALK_FORCE
				stop = false

		if stop:
			var vsign = sign(velocity.x)
			var vlen = abs(velocity.x)

			vlen -= STOP_FORCE * delta
			if vlen < 0:
				vlen = 0

			velocity.x = vlen * vsign
			sprite.play(\"default\")
		else:
			sprite.play(\"walk\")
	else:
		if is_dead and not is_dead_jumped :
			velocity.y = -JUMP_SPEED
			jumping = true
			is_dead_jumped = true
		
		velocity.x = 0

	# Integrate forces to velocity
	velocity += force * delta
	# Integrate velocity into motion and move
	velocity = move_and_slide(velocity, Vector2(0, -1))

	if is_on_floor():
		on_air_time = 0

	if jumping and velocity.y > 0:
		# If falling, no longer jumping
		jumping = false

	if on_air_time < JUMP_MAX_AIRBORNE_TIME and jump and not prev_jump_pressed and not jumping:
		# Jump must also be allowed to happen if the character left the floor a little bit ago.
		# Makes controls more snappy.
		velocity.y = -JUMP_SPEED
		jumping = true
		jump_sound.play()

	on_air_time += delta
	prev_jump_pressed = jump
	sync_with_camera()

func _on_NpcSensorArea2D_body_entered(body):
	#TODO: move trigger to show npc dialogue to NPC
	if body.is_in_group(\"npc\"):
		emit_signal(\"npc_collided\",body.name)
		print_debug(\"SIGNAL npc_collided name: \" + body.name)

func disable():
	if is_disabled :
		return

	is_disabled = true

func enable():
	is_disabled = false

func sync_with_camera():
	position.x = clamp(position.x, $Camera2D.limit_left, $Camera2D.limit_right)
	position.y = clamp(position.y, $Camera2D.limit_top, $Camera2D.limit_bottom)

func _ready():
	disable()

func _on_Timer_timeout():
	enable()

#TODO: make interface and applly to all killable objects
func die():
	print_debug(\"die()\")
	$TimerDeath.start()
	is_dead = true
	sprite.play(\"dead\")
	hurt_sound.play()


func _on_TimerDeath_timeout():
	emit_signal(\"dead\")
"

[sub_resource type="CapsuleShape2D" id=2]
radius = 5.33115
height = 5.66335

[sub_resource type="CircleShape2D" id=3]
radius = 8.54558

[node name="Player" type="KinematicBody2D" groups=[
"player",
]]
script = SubResource( 1 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
frames = ExtResource( 1 )
playing = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0, 0.4 )
shape = SubResource( 2 )

[node name="Camera2D" type="Camera2D" parent="."]
current = true
smoothing_enabled = true
script = ExtResource( 2 )

[node name="NpcSensorArea2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="NpcSensorArea2D"]
shape = SubResource( 3 )

[node name="Timer" type="Timer" parent="."]
wait_time = 0.2
one_shot = true
autostart = true

[node name="TimerDeath" type="Timer" parent="."]
wait_time = 0.8
one_shot = true

[node name="JumpSound" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 3 )

[node name="HurtSound" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 4 )
pitch_scale = 4.61
[connection signal="body_entered" from="NpcSensorArea2D" to="." method="_on_NpcSensorArea2D_body_entered"]
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
[connection signal="timeout" from="TimerDeath" to="." method="_on_TimerDeath_timeout"]
